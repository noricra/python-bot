#!/usr/bin/env python3
"""
Test rapide pour v√©rifier la nouvelle mise en page du carousel acheteur
"""

def test_carousel_layout():
    """V√©rifie que le carousel acheteur a la m√™me structure que le vendeur"""
    print("üîç Test de la mise en page carousel...")

    try:
        with open('app/integrations/telegram/handlers/buy_handlers.py', 'r') as f:
            buy_handlers = f.read()

        with open('app/integrations/telegram/handlers/sell_handlers.py', 'r') as f:
            sell_handlers = f.read()

        tests = []

        # 1. Breadcrumb pr√©sent
        if 'breadcrumb = f"üìÇ _Boutique ‚Ä∫ {category}_"' in buy_handlers:
            tests.append(("‚úÖ", "Breadcrumb pr√©sent (üìÇ _Boutique ‚Ä∫ {category}_)"))
        else:
            tests.append(("‚ùå", "Breadcrumb manquant"))

        # 2. S√©parateur visuel
        if '"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\\n\\n"' in buy_handlers or '‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ' in buy_handlers:
            tests.append(("‚úÖ", "S√©parateur visuel pr√©sent"))
        else:
            tests.append(("‚ùå", "S√©parateur visuel manquant"))

        # 3. Structure sections (commentaires)
        section_headers = [
            '# 0. BREADCRUMB',
            '# 1. TITRE',
            '# 2. PRIX + VENDEUR',
            '# 3. SOCIAL PROOF',
            '# 4. DESCRIPTION',
            '# 5. INFOS TECHNIQUES'
        ]
        sections_found = sum(1 for header in section_headers if header in buy_handlers)
        if sections_found >= 5:
            tests.append(("‚úÖ", f"Structure sections pr√©sente ({sections_found}/6)"))
        else:
            tests.append(("‚ùå", f"Structure sections incompl√®te ({sections_found}/6)"))

        # 4. Description tronqu√©e √† 160 chars (comme vendeur)
        if 'len(desc) > 160:' in buy_handlers:
            tests.append(("‚úÖ", "Description tronqu√©e √† 160 chars (identique vendeur)"))
        else:
            tests.append(("‚ö†Ô∏è", "Description tronqu√©e diff√©remment"))

        # 5. Stats visibles (rating, ventes, vues)
        if "product.get('rating', 0) > 0:" in buy_handlers and "product.get('sales_count', 0) > 0:" in buy_handlers:
            tests.append(("‚úÖ", "Stats (rating, ventes, vues) affich√©es"))
        else:
            tests.append(("‚ùå", "Stats manquantes"))

        # 6. Infos techniques (cat√©gorie + taille)
        if 'file_size_mb' in buy_handlers and 'caption += f"üìÇ _{category}_"' in buy_handlers:
            tests.append(("‚úÖ", "Infos techniques (cat√©gorie + taille fichier)"))
        else:
            tests.append(("‚ùå", "Infos techniques incompl√®tes"))

        # 7. Handler noop pour navigation
        with open('app/integrations/telegram/callback_router.py', 'r') as f:
            callback_router = f.read()

        if "if callback_data == 'noop':" in callback_router:
            tests.append(("‚úÖ", "Handler 'noop' pr√©sent (navigation cat√©gories)"))
        else:
            tests.append(("‚ùå", "Handler 'noop' manquant"))

        # Afficher r√©sultats
        print("")
        for status, message in tests:
            print(f"{status} {message}")

        # R√©sum√©
        passed = sum(1 for s, _ in tests if s == "‚úÖ")
        total = len(tests)

        print("")
        print("=" * 60)
        if passed == total:
            print(f"‚úÖ CAROUSEL UX UPGRADE COMPLET ({passed}/{total})")
            print("üéâ Mise en page identique au carousel vendeur!")
            return True
        elif passed >= total - 1:
            print(f"‚ö†Ô∏è PRESQUE COMPLET ({passed}/{total})")
            print("Minor issues - v√©rifier manuellement")
            return True
        else:
            print(f"‚ùå INCOMPLET ({passed}/{total})")
            print(f"{total - passed} test(s) √©chou√©(s)")
            return False

    except Exception as e:
        print(f"‚ùå Erreur: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == '__main__':
    success = test_carousel_layout()
    exit(0 if success else 1)
